name: Build and Notarize for macOS

on:
  push:
    tags:
      - "v*"
  repository_dispatch:
    types: [notarization_complete]

jobs:
  build-and-submit:
    if: github.event_name == 'push'
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v3

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: "1.22"

      - name: Build for macOS
        run: |
          GOOS=darwin GOARCH=amd64 go build -o tasks-amd64 .
          GOOS=darwin GOARCH=arm64 go build -o tasks-arm64 .
          lipo -create -output tasks tasks-amd64 tasks-arm64

      - name: Create ZIP for notarization
        run: ditto -c -k --keepParent tasks tasks.zip

      - name: Submit for notarization
        env:
          AC_USERNAME: ${{ secrets.APPLE_ID }}
          AC_PASSWORD: ${{ secrets.APPLE_APP_SPECIFIC_PASSWORD }}
          APPLE_TEAM_ID: ${{ secrets.APPLE_TEAM_ID }}
          REPO_ACCESS_TOKEN: ${{ secrets.REPO_ACCESS_TOKEN }}
        run: |
          CALLBACK_URL="https://api.github.com/repos/${{ github.repository }}/dispatches"
          SUBMISSION_ID=$(xcrun notarytool submit tasks.zip \
            --apple-id "$AC_USERNAME" \
            --password "$AC_PASSWORD" \
            --team-id "$APPLE_TEAM_ID" \
            --webhook "$CALLBACK_URL" \
            --webhook-payload "{\"event_type\": \"notarization_complete\", \"client_payload\": {\"submission_id\": \"{id}\"}}" \
            --webhook-header "Authorization: token $REPO_ACCESS_TOKEN" \
            --output-format json | jq -r '.id')
          echo "Submission ID: $SUBMISSION_ID"
          echo "submission_id=$SUBMISSION_ID" >> $GITHUB_ENV

      - name: Upload artifacts
        uses: actions/upload-artifact@v3
        with:
          name: build-artifacts
          path: |
            tasks
            tasks.zip

  process-notarization:
    if: github.event_name == 'repository_dispatch' && github.event.action == 'notarization_complete'
    runs-on: macos-latest
    steps:
      - name: Download artifacts
        uses: actions/download-artifact@v3
        with:
          name: build-artifacts

      - name: Check notarization status
        env:
          AC_USERNAME: ${{ secrets.APPLE_ID }}
          AC_PASSWORD: ${{ secrets.APPLE_APP_SPECIFIC_PASSWORD }}
          APPLE_TEAM_ID: ${{ secrets.APPLE_TEAM_ID }}
          SUBMISSION_ID: ${{ github.event.client_payload.submission_id }}
        run: |
          STATUS=$(xcrun notarytool info $SUBMISSION_ID \
            --apple-id "$AC_USERNAME" \
            --password "$AC_PASSWORD" \
            --team-id "$APPLE_TEAM_ID" \
            --output-format json | jq -r '.status')
          if [ "$STATUS" = "Accepted" ]; then
            echo "Notarization successful"
          else
            echo "Notarization failed with status: $STATUS"
            exit 1
          fi

      - name: Staple notarization ticket
        run: xcrun stapler staple tasks

      - name: Create release
        uses: softprops/action-gh-release@v1
        with:
          files: |
            tasks
            tasks.zip
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
